<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace == 호출할 Interface 이름 적기 -->
<mapper namespace="com.project.dd.activity.attraction.mapper.AttractionMapper">
	
	<!-- id == 인터페이스의 추상메서드의 이름 -->

	<!-- User용 -->
	<!-- User용 페이징 -->
	<select id="getUserPagingTotalPosts" resultType="int">
		select count(*) from vwAttractionList where close = 'n'
	</select>
	
	<select id="getOpenAttractionList" parameterType="map" resultType="com.project.dd.activity.attraction.domain.AttractionDTO">
		select *
		from (select n.*, rownum as rnum from (
		
		select * from vwAttractionList where close = 'n'
		
		) n) where rnum between #{startIndex} and #{endIndex}
	</select>
	
	<select id="getCloseAttractionList" resultType="com.project.dd.activity.attraction.domain.AttractionDTO">
		select * from vwAttractionList where close = 'y'
	</select>
	
	<select id="getAttraction" parameterType="String" resultType="com.project.dd.activity.attraction.domain.AttractionDTO">
		select * from vwAttractionList where attraction_seq = #{attraction_seq}
	</select>
	
	<select id="getAttractionImgList" parameterType="String" resultType="com.project.dd.activity.attraction.domain.AttractionImgDTO">
		select * from tblAttractionImg where attraction_seq = #{attraction_seq}
	</select>
	
	<!-- Admin용 -->
	<!-- Admin용 페이징 -->
	<select id="getAdminPagingTotalPosts"  parameterType="map" resultType="int">
      select count(*) from vwAttractionList
      <if test="searchStatus == 'y'.toString()">
	        where name like '%' || #{word} || '%'
	  </if>
	</select>
	
	<select id="getAllAttractionList" parameterType="map" resultType="com.project.dd.activity.attraction.domain.AttractionDTO">
		select *
		from (select n.*, rownum as rnum from
				(select * from vwAttractionList) n
				<if test="searchStatus == 'y'.toString()">
				  where name like '%' || #{word} || '%'
			  	</if>
		) where rnum between #{startIndex} and #{endIndex}
	</select>

	<insert id="addAttraction" parameterType="com.project.dd.activity.attraction.domain.AttractionDTO">
		INSERT INTO tblAttraction (attraction_seq, name, info, capacity, time, restriction)
		VALUES (seqtblAttraction.NEXTVAL, #{name}, #{info}, #{capacity}, '10:00 - 22:00', #{restriction})
	</insert>
	
	<select id="getAttractionSeq" resultType="String">
		select max(attraction_seq) as attraction_seq from tblAttraction
	</select>
	
	<insert id="addAttractionLocation" parameterType="com.project.dd.activity.attraction.domain.AttractionDTO">
		INSERT INTO tblAttractionLocation (attraction_location_seq, lat, lng, attraction_seq) VALUES (seqAttractionLocation.nextVal, #{lat}, #{lng}, #{attraction_seq})
	</insert>
	
	<insert id="addAttractionImg" parameterType="com.project.dd.activity.attraction.domain.AttractionImgDTO">
		INSERT INTO tblAttractionImg (attraction_img_seq, img, attraction_seq)
		VALUES (seqtblAttractionImg.NEXTVAL, #{img}, #{attraction_seq})
	</insert>
	
	<update id="delAttraction" parameterType="String">
		update tblAttraction set name = name || '(운영종료)' where attraction_seq = #{attraction_seq}
	</update>
	
	<select id="countAttractionImg" parameterType="String" resultType="int">
		select count(*) from tblAttractionImg where attraction_seq = #{attraction_seq}
	</select>
	
	<delete id="delAttractionImg" parameterType="String">
		delete from tblAttractionImg where attraction_seq = #{attraction_seq}
	</delete>
	
	<select id="countAttractionLocation" parameterType="String" resultType="int">
		select count(*) from tblAttractionLocation where attraction_seq = #{attraction_seq}
	</select>
	
	<delete id="delAttractionLocation" parameterType="String">
		delete from tblAttractionLocation where attraction_seq = #{attraction_seq}
	</delete>
	
	
	<select id="getAttractionDefaultImgName" parameterType="String" resultType="String">
		select img from tblAttractionImg where attraction_seq = #{attraction_seq}
	</select>
	
	<update id="editAttractionLocation" parameterType="com.project.dd.activity.attraction.domain.AttractionDTO">
		update tblAttractionLocation set lat = #{lat}, lng = #{lng} where attraction_seq = #{attraction_seq}
	</update>
	
	<update id="editAttraction" parameterType="com.project.dd.activity.attraction.domain.AttractionDTO">
		update tblAttraction set name = #{name}, info = #{info}, capacity = #{capacity}, restriction = #{restriction} where attraction_seq = #{attraction_seq}
	</update>
	
	<delete id="delAttractionImgByImgSeq" parameterType="String">
		delete from tblAttractionImg where attraction_img_seq = #{attraction_img_seq}
	</delete>
	
	<select id="getAllAttractionImgList" resultType="com.project.dd.activity.attraction.domain.AttractionImgDTO">
		select * from tblAttractionImg
	</select>
	
	<!-- Attraction Reservation -->
	<select id="getReservationAdminPagingTotalPosts" parameterType="map" resultType="int">
		select count(*) from tblBookUser
      <if test="searchStatus == 'y'.toString()">
	        where attraction_name like '%' || #{word} || '%' or user_name like '%' || #{word} || '%'  
	  </if>
	</select>
	
	<select id="getAttractionBookList" parameterType="map" resultType="com.project.dd.activity.attraction.domain.BookUserDTO">
		select *
		from (select n.*, rownum as rnum from (
		
		select a.book_user_seq, to_char(a.regdate, 'yyyy-mm-dd') as regdate, a.capacity, a.attraction_book_seq, a.user_seq, a.attraction_seq,
		(select name from tblAttraction where attraction_seq = a.attraction_seq) as attraction_name,
		(select name from tblUser where user_seq = a.user_seq) as user_name,
		(select email from tblUser where user_seq = a.user_seq) as email
		from tblBookUser a
		order by regdate desc		
		
		) n
			<if test="searchStatus == 'y'.toString()">
			  where attraction_name like '%' || #{word} || '%' or user_name like '%' || #{word} || '%'
		  	</if>
		) where rnum between #{startIndex} and #{endIndex}
	</select>
	
	<insert id="addAttractionBook" parameterType="com.project.dd.activity.attraction.domain.BookUserDTO">
		INSERT INTO tblBookUser (book_user_seq, regdate, capacity, attraction_book_seq, user_seq, attraction_seq)
		VALUES (seqtblBookUser.NEXTVAL, sysdate, #{capacity}, #{attraction_book_seq}, #{user_seq}, #{attraction_seq})
	</insert>
	
	<select id="getAttractionBookCapacity" parameterType="com.project.dd.activity.attraction.domain.BookUserDTO" resultType="int">
		select capacity from tblAttractionBook where attraction_book_seq = #{attraction_book_seq}
	</select>
	
	
   <!-- 유효성 검사 -->
	<select id="checkLocationDuplication" parameterType="com.project.dd.activity.attraction.domain.AttractionDTO" resultType="int">
		select count(*) from vwLocation where lat = #{lat} and lng = #{lng}
	</select>

	<select id="checkNameDuplication" parameterType="com.project.dd.activity.attraction.domain.AttractionDTO" resultType="int">
		select count(*) from tblAttraction where name = #{name}
	</select>
	
	<select id="checkAvailableCapacity" parameterType="com.project.dd.activity.attraction.domain.BookUserDTO" resultType="int">
		select nvl(sum(capacity), 0)as capacity  from tblBookUser 
		where to_char(regdate, 'yyyy-mm-dd') = to_char(sysdate, 'yyyy-mm-dd') and attraction_seq = #{attraction_seq} and attraction_book_seq = #{attraction_book_seq}
	</select>
	
	<select id="checkTicket" parameterType="com.project.dd.activity.attraction.domain.BookUserDTO" resultType="int">
		select count(*)
		from (select a.*,
		        (select name from tblUser where user_seq = a.user_seq) as name,
		        (select email from tblUser where user_seq = a.user_seq) as email,
		        (select to_char(visit_date, 'yyyy-mm-dd') from tblTicketBook where ticket_book_seq = a.ticket_book_seq) as visit_date
		        from tblUserBook a)
		where user_seq = #{user_seq} and visit_date = to_char(sysdate, 'yyyy-mm-dd')
	</select>
	
</mapper>